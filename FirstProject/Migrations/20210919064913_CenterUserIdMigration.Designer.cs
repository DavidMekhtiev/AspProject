// <auto-generated />
using System;
using FirstProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FirstProject.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20210919064913_CenterUserIdMigration")]
    partial class CenterUserIdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("FirstProject.Models.Center", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Center");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 2,
                            CountryId = 1,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 650, DateTimeKind.Local).AddTicks(2039),
                            Name = "Alma-Center №1"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CountryId = 1,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3793),
                            Name = "Alma-Center №2"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            CountryId = 1,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3875),
                            Name = "Nur-Center №1"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 1,
                            CountryId = 1,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3878),
                            Name = "Nur-Center №2"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            CountryId = 2,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3880),
                            Name = "Moscow-Center №1"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            CountryId = 2,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3881),
                            Name = "Moscow-Center №2"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 4,
                            CountryId = 2,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3883),
                            Name = "Petersburg-Center №1"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 4,
                            CountryId = 2,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(3885),
                            Name = "Petersburg-Center №2"
                        });
                });

            modelBuilder.Entity("FirstProject.Models.CenterUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CenterId");

                    b.HasIndex("CenterId");

                    b.ToTable("CenterUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CenterId = 3,
                            Id = 1
                        },
                        new
                        {
                            UserId = 2,
                            CenterId = 5,
                            Id = 2
                        },
                        new
                        {
                            UserId = 3,
                            CenterId = 8,
                            Id = 3
                        },
                        new
                        {
                            UserId = 4,
                            CenterId = 1,
                            Id = 4
                        });
                });

            modelBuilder.Entity("FirstProject.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Nur-Sultan"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Almaty"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "St-Petersburg"
                        });
                });

            modelBuilder.Entity("FirstProject.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Qazaqstan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Russia"
                        });
                });

            modelBuilder.Entity("FirstProject.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Админ",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Преподаватель",
                            Name = "Teacher"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Владелец",
                            Name = "Owner"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Студент",
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("FirstProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("IIN")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 651, DateTimeKind.Local).AddTicks(5004),
                            Email = "mekthiev.1995@bk.ru",
                            FirstName = "Давид",
                            IIN = "11111111111",
                            LastName = "Мехтиев",
                            MiddleName = "Низамиевич",
                            Password = "$2b$10$euoyJQR6LOBYOBUrHpDStOUmjhpSPwpcIck7N8GLsyPizlITmo0UC",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 754, DateTimeKind.Local).AddTicks(5437),
                            Email = "shagirovaDayana@gmail.com",
                            FirstName = "Даяна",
                            IIN = "123123154345",
                            LastName = "Шагирова",
                            MiddleName = "Жолдасбековна",
                            Password = "$2b$10$gNZfmvd/wOb7LO5QvXnhJODuKr6d6Qg7dN.4Gi.zN2QwdV1R/khuq",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 852, DateTimeKind.Local).AddTicks(1051),
                            Email = "litvinov.2004@mail.ru",
                            FirstName = "Никита",
                            IIN = "24523452341",
                            LastName = "Литвинов",
                            MiddleName = "Сергеевич",
                            Password = "$2b$10$w9TMKCSmd8U5vpirP/E3CuZ.ykvSt0oGcADXtrcwp1qTFuZvpItBO",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2021, 9, 19, 12, 49, 12, 950, DateTimeKind.Local).AddTicks(3248),
                            Email = "maksim12313@mail.ru",
                            FirstName = "Максим",
                            IIN = "112624511111",
                            LastName = "Дворянкин",
                            MiddleName = "Иванович",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("FirstProject.Models.Center", b =>
                {
                    b.HasOne("FirstProject.Models.City", "City")
                        .WithMany("Centers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstProject.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FirstProject.Models.CenterUser", b =>
                {
                    b.HasOne("FirstProject.Models.Center", "Center")
                        .WithMany("CenterUsers")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstProject.Models.User", "User")
                        .WithMany("CenterUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstProject.Models.City", b =>
                {
                    b.HasOne("FirstProject.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FirstProject.Models.User", b =>
                {
                    b.HasOne("FirstProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FirstProject.Models.Center", b =>
                {
                    b.Navigation("CenterUsers");
                });

            modelBuilder.Entity("FirstProject.Models.City", b =>
                {
                    b.Navigation("Centers");
                });

            modelBuilder.Entity("FirstProject.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("FirstProject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FirstProject.Models.User", b =>
                {
                    b.Navigation("CenterUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
